{"version":3,"sources":["emojis.js","index.js"],"names":["acousticness","danceability","energy","instrumentalness","valence","window","location","hash","slice","split","map","reduce","hashes","access_token","token_type","fetchData","fetch","endpoint","headers","Authorization","getCurrentlyPlaying","then","res","json","getAudioFeatures","currentTrack","albumImage","item","album","images","document","body","style","backgroundImage","url","is_playing","audioFeatures","id","showFeatures","featureKeys","features","Object","entries","filter","feature","includes","value","emoji","emojis","Math","round","container","createElement","classList","add","appendChild","featureElements","type","el","append","renderFeature","innerHTML","i","setInterval","n","length"],"mappings":"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","file":"src.38dd26c5.js","sourceRoot":"..","sourcesContent":["export default {\n  acousticness: ['🎹', '🎻'],\n  danceability: ['🧘️', '🕺'],\n  energy: ['😴', '⚡'],\n  instrumentalness: ['🎤', '🤫'],\n  valence: ['☹️', '😀'],\n}\n","import emojis from './emojis'\nimport style from './style.module.css'\n\nconst { access_token, token_type } = window.location.hash\n  .slice(1)\n  .split('&')\n  .map(hash => hash.split('='))\n  .reduce((hashes, [hash, value]) => ({ ...hashes, [hash]: value }), {})\n\nconst fetchData = async endpoint =>\n  await fetch(`https://api.spotify.com/v1/${endpoint}`, {\n    headers: { Authorization: `${token_type} ${access_token}` },\n  })\n\nconst getCurrentlyPlaying = async () =>\n  await fetchData('me/player/currently-playing').then(res => res.json())\n\nconst getAudioFeatures = async () => {\n  const currentTrack = await getCurrentlyPlaying()\n\n  const albumImage = currentTrack.item.album.images[0]\n  document.body.style.backgroundImage = `url(${albumImage.url})`\n\n  if (currentTrack.is_playing) {\n    const audioFeatures = await fetchData(\n      `audio-features/${currentTrack.item.id}`\n    ).then(res => res.json())\n    return audioFeatures\n  }\n}\nconst showFeatures = async () => {\n  const audioFeatures = await getAudioFeatures()\n  if (audioFeatures) {\n    const featureKeys = [\n      'acousticness',\n      'danceability',\n      'energy',\n      'instrumentalness',\n      'valence',\n    ]\n    const features = Object.entries(audioFeatures)\n      .filter(([feature]) => featureKeys.includes(feature))\n      .map(([feature, value]) => ({\n        feature,\n        emoji: emojis[feature][Math.round(value)],\n        value,\n      }))\n\n    const container = document.createElement('div')\n    container.classList.add(style.container)\n    document.body.appendChild(container)\n\n    const featureElements = ['feature', 'emoji', 'value'].map(type => {\n      const el = document.createElement('span')\n      el.classList.add(style[type])\n      return el\n    })\n    container.append(...featureElements)\n\n    const renderFeature = ({ feature, value, emoji }) => {\n      featureElements[0].innerHTML = feature\n      featureElements[1].innerHTML = emoji\n      featureElements[2].innerHTML = `${Math.round(value * 100)}%`\n    }\n\n    let i = 0\n    setInterval(() => {\n      const n = features.length\n      const feature = features[((i % n) + n) % n]\n      renderFeature(feature, container)\n      i++\n    }, 1500)\n  }\n}\n\nshowFeatures()\n"]}